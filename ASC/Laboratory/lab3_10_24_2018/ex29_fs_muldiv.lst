     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; (a+b)/(c-2)-d+2-x; a,b,c-byte; d-doubleword; x-qword
    14 00000000 05                          a db 5
    15 00000001 05                          b db 5
    16 00000002 05                          c db 5
    17 00000003 05000000                    d dd 5
    18 00000007 0500000000000000            x dq 5
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 A0[00000000]                    mov al, [a]
    24 00000005 0205[01000000]                  add al, [b]; al = a+b
    25 0000000B 8A1D[02000000]                  mov bl, [c]
    26 00000011 80EB02                          sub bl, 2; bl = c-2
    27 00000014 B400                            mov ah, 0; ax = a+b
    28 00000016 F6F3                            div bl
    29 00000018 88C3                            mov bl, al; bl = (a+b)/(c-2)
    30 0000001A BA00000000                      mov edx, 0
    31 0000001F 88DA                            mov dl, bl
    32 00000021 2B15[03000000]                  sub edx, [d]; edx = (a+b)/(c-2) - d
    33 00000027 83C202                          add edx, 2; edx = (a+b)/(c-2) - d + 2
    34 0000002A B800000000                      mov eax, 0
    35 0000002F 8B1D[0B000000]                  mov ebx, dword [x+4]
    36 00000035 8B0D[07000000]                  mov ecx, dword [x]
    37 0000003B 29CA                            sub edx, ecx
    38 0000003D 19D8                            sbb eax, ebx; edx:eax = (a+b)/(c+2) - d + 2 - x
    39                                          ; exit(0)
    40 0000003F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    41 00000041 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
