--Program ID 1--

ExeStack:
(v1 Ref(int);(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1229b41c}
--Program ID 4--

ExeStack:
(v1 Ref(int);(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 4--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 4--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 4--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 4--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 4--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 4--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 4--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 4--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 4--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 4--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 4--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 4--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 4--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 4--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 4--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 5--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 5--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 5--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 5--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 5--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 6--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 5--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 6--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 5--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 6--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 5--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 6--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 5--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 6--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 5--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 6--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 5--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 6--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 5--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 6--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 5--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 6--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 4--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 5--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 6--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@4952955f}
--Program ID 1--

ExeStack:
(v1 Ref(int);(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7150e6f1}
--Program ID 1--

ExeStack:
(v1 Ref(int);(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@37e0197f}
--Program ID 1--

ExeStack:
(v1 Ref(int);(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7581fb5f}
--Program ID 1--

ExeStack:
(v1 Ref(int);(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@56edbde0}
--Program ID 1--

ExeStack:
(v1 Ref(int);(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@61559dc7}
--Program ID 1--

ExeStack:
(v1 Ref(int);(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@7849071a}
--Program ID 1--

ExeStack:
(v1 Ref(int);(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
writeHeap(v1,readHeap(v1)*2)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
writeHeap(v1,readHeap(v1)*2)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
print(readHeap(v1)-1)
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
print(readHeap(v1)-1)
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@1f1402bc}
--Program ID 1--

ExeStack:
(v1 Ref(int);(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
writeHeap(v1,readHeap(v1)*2)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
writeHeap(v1,readHeap(v1)*2)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
print(readHeap(v1)-1)
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
print(readHeap(v1)-1)
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=Model.Triple@5cdcb355}
--Program ID 1--

ExeStack:
(v1 Ref(int);(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
v1 Ref(int)
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(new(v1,2);(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
new(v1,2)
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(0,int)

Out:
[]
FileTable:

Heap:

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(cnt int;(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
cnt int
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(newSemaphore(cnt,readHeap(v1),1);(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
newSemaphore(cnt,readHeap(v1),1)
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->0
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[],1)}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))));(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[],1)}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[],1)}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))))
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[],1)}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[],1)}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[],1)}
--Program ID 1--

ExeStack:
(fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))));(acquire(cnt);(print(readHeap(v1)-1);release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[],1)}
--Program ID 2--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[],1)}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[],1)}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[],1)}
--Program ID 1--

ExeStack:
fork((acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))))
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[],1)}
--Program ID 2--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[],1)}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 1--

ExeStack:
(acquire(cnt);(print(readHeap(v1)-1);release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 2--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 3--

ExeStack:
(acquire(cnt);(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 2--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->2

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 2--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 2--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 2--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 3--

ExeStack:
acquire(cnt)
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[2],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 3--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 3--

ExeStack:
(writeHeap(v1,readHeap(v1)*10);(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt))))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 3--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 3--

ExeStack:
writeHeap(v1,readHeap(v1)*10)
(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->20

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 3--

ExeStack:
(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 3--

ExeStack:
(writeHeap(v1,readHeap(v1)*2);(print(readHeap(v1));release(cnt)))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 3--

ExeStack:
writeHeap(v1,readHeap(v1)*2)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 3--

ExeStack:
writeHeap(v1,readHeap(v1)*2)
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->200

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 3--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 3--

ExeStack:
(print(readHeap(v1));release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 3--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 3--

ExeStack:
print(readHeap(v1))
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 3--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 3--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[3],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[],1)}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[],1)}
--Program ID 1--

ExeStack:
acquire(cnt)
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[],1)}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[],1)}
--Program ID 1--

ExeStack:
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 1--

ExeStack:
(print(readHeap(v1)-1);release(cnt))

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 1--

ExeStack:
print(readHeap(v1)-1)
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 1--

ExeStack:
print(readHeap(v1)-1)
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 1--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 1--

ExeStack:
release(cnt)

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[1],1)}
--Program ID 1--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[],1)}
--Program ID 2--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[],1)}
--Program ID 3--

ExeStack:

SymTable:
cnt->1
v1->(1,int)

Out:
[20, 400, 399]
FileTable:

Heap:
1->400

Semaphore Table: 
{1=(2,[],1)}
